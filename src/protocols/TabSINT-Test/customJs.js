(function() {
  /*
     functionRegistry is a container for protocol functions.

     To add a function, use the following notation:
     functionRegistry.newFunctionName = function(dm) {
     stuff

     return {pageField: newVal, pageField: {subField : newVal2} };
     }

     Note the return structure mimics the structure outlined in the protocol_schema

     */

  tabsint.controller("CustomJs1", function($scope, file, app) {
    $scope.test = "This text is generated by the files 'customHtml.html' and 'customJs.js'";
  });

  tabsint.register("multichoice002", function(dm) {
    var response = dm.result.response; // get the response to the last question
    var progress;
    if (response === "A") {
      progress = "Question 2/5 in Section 4";
    } else if (response === "B") {
      progress = 80;
    }
    return { progressBarVal: progress };
  });

  tabsint.register("preprocessExample", function(dm) {
    var firstResponse = dm.examResults.testResults.responses.slice(1, 2);
    var newInstructionText =
      "Your first response to this protocol was recorded as: <br /><br /> " + angular.toJson(firstResponse, true);
    return { instructionText: newInstructionText };
  });
})();
